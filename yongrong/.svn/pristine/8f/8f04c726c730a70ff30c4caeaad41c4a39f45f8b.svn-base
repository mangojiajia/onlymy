using BaseS.File;
using BaseS.Security;
using BaseS.Serialization;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Collections.Generic;
using System.Data;
using Yongrong.Model.Int.BaseInfo;
using Yongrong.Model.Int.Gate;
using Yongrong.Model.Int.IC;
using Yongrong.Model.Int.Weigh;
using Yongrong.Srvc.Push;
using Yongrong.Srvc.Weighbridge;

namespace UnitTestProject1
{
    [TestClass]
    public class UnitTest1
    {
        [TestMethod]
        public void TestMethod3()
        {
            //JPushSrvc.SendPush(string.Empty);
            //string realWeight = "21500";
            //realWeight = (Convert.ToDecimal(realWeight) / 1000).ToString();
            //Console.WriteLine(realWeight);

            WeighSyncReq req = new WeighSyncReq();
            req.Orderid = "0297";
            req.Msgid = "1A202006200003";
            req.Weightime = "1";
            req.Tractorid = "豫RCF229";
            req.Trailerid = "";
            req.Passtime = "2020-06-20 01:18:16";
            req.Operator = "Operator";
            //req.Sign = 
        }

        [TestMethod]
        public void TestMethod1()
        {
            ICQueryOrderReq req1 = new ICQueryOrderReq()
            {
                 Order = "",
                  Tractor = ""
            };

            BJson.Obj2JsonT<ICQueryOrderReq>(req1, out string js);

            DateTime dt = DateTime.UtcNow;
            DateTime dt2 = DateTime.Now;

            string s = string.Join(',', new System.Collections.Generic.List<string>());

            BaseGoodsAddReq req = new BaseGoodsAddReq()
            {
                 Goods = new Yongrong.Model.Db.BaseGoods()
                 {
                      Goodsname = "1",
                       Goodsid = "2",
                 }
            };

            BJson.Obj2JsonT<BaseGoodsAddReq>(req, out string json);

            Assert.IsNull(json);
        }

        [TestMethod]
        public void TestMethod2()
        {
            var str = "{\"errorCode\":0,\"errorMessage\":\"获取车辆信息成功\",\"data\":{\"total\":1,\"pageNo\":1,\"pageSize\":10,\"list\":[{\"carUuid\":\"c115c38b95dd4935bc6cbc969ccc1300\",\"plateNo\":\"闽A5G105\",\"plateType\":0,\"plateColor\":0,\"carType\":2,\"ownerId\":null,\"carColor\":1,\"personName\":null,\"phoneNo\":null,\"cardNo\":null,\"maxPassenger\":null,\"plateStart\":null}]}}";

            str.Json2ObjT<GateGetCarInfoRsp>(out GateGetCarInfoRsp rsp);

            Assert.IsNotNull(rsp);
        }

        [TestMethod]
        public  void Test3()
        {
            //BExcel.ToDataTable("d:\\123.xls", "hangzhou$", out DataTable data);
            BExcel.ToDataTable("d:\\shiguang.xlsx", "hangzhou$", out DataTable data);
            Assert.IsNotNull(data);
        }

    }    

    [TestClass]
    public class UnitTestWeigh
    {
        [TestMethod]
        public void TestMethod1()
        {
            /*List<string> slist = new List<string>();

            slist = null;

            int num = slist?.Count ??0;

            if (1 <= (slist?.Count ??0))
            {
                slist = null;
            }
            var dpext = new Yongrong.Model.Int.Weigh.DataParamExt()
            {
                Driver = "王陆",
                Endtime = DateTime.Now.AddMinutes(10).ToString("yyyy-MM-dd HH:mm:ss"),
                Msg_id = DateTime.Now.Ticks.ToString(),
                Order_id = "abc123123",
                Order_type = "送货",
                Starttime = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"),
                Tractor_id = "闽B88888",
                Trailer_id = "闽B77777",
                Weigh_time = "1"
            };

            dpext.Sign = BMD5.ToMD5String(dpext.Order_id + dpext.Msg_id + dpext.Starttime, 32);

            bool ret = WeighbridgeSrvc.BatchInsert(dpext);

            Assert.IsTrue(ret);*/
            string tel = "13606543784";
            string pwd = tel.Substring(5, 6);
            Console.WriteLine(pwd);

            var sign = BMD5.ToMD5String("138567372611590147666000" + BMD5.ToMD5String("737261",32).ToUpper(), 32).ToUpper();
            Console.WriteLine(sign);
        }
    }
}
