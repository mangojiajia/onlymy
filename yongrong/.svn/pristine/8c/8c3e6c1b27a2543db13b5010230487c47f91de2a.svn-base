using System;
using System.Collections.Generic;
using System.Text;
using Yongrong.Model.Db;
using Yongrong.Model.Int;
using BaseS.File.Log;
using System.Linq;

namespace Yongrong.Srvc.Sys
{
    class SysConfigSrvc : BaseSrvc
    {
        /// <summary>
        /// 异常数据查询
        /// </summary>
        /// <param name="query"></param>
        /// <param name="page"></param>
        /// <param name="baseTrailerslist"></param>
        /// <returns></returns>
        public static bool Get(SysConfig query, PageBean page, out List<SysConfig> sysconfiglist)
        {
            sysconfiglist = new List<SysConfig>();

            if (null == page)
            {
                page = new PageBean();
            }

            if (null == query)
            {
                query = new SysConfig();
            }

            //进去日志
            query.Debug();

            using (var db = DbContext)
            {
                page.Row = db.SysConfig.Count(a =>
                (string.IsNullOrWhiteSpace(query.Ckey) || (!string.IsNullOrWhiteSpace(a.Ckey) && a.Ckey.Contains(query.Ckey)))
                && (string.IsNullOrWhiteSpace(query.Price) || (!string.IsNullOrWhiteSpace(a.Price) && a.Price.Contains(query.Price)))
                );

                page.SumPageCount();

                sysconfiglist.AddRange(
                    db.SysConfig.Where(a =>
                (string.IsNullOrWhiteSpace(query.Ckey) || (!string.IsNullOrWhiteSpace(a.Ckey) && a.Ckey.Contains(query.Ckey)))
                && (string.IsNullOrWhiteSpace(query.Price) || (!string.IsNullOrWhiteSpace(a.Price) && a.Price.Contains(query.Price)))
                    )
                    .OrderByDescending(a => a.Id)
                    .Skip((page.Index - 1) * page.Size).Take(page.Size)
                    );
            }
            return true;
        }


        /// <summary>
        /// 添加和更新 系统配置项
        /// </summary>
        /// <param name="query"></param>
        /// <returns></returns>
        public static string AddOrUpdate(SysConfig addupdobj, string op)
        {
            if (null == addupdobj)
            {
                return ParamNull;
            }

            using (var db = DbContext)
            {
                switch (op)
                {
                    case ADD:

                        if (!string.IsNullOrWhiteSpace(addupdobj.Ckey) && !string.IsNullOrWhiteSpace(addupdobj.Price)) {

                            var old = db.SysConfig.FirstOrDefault(a => addupdobj.Ckey.Equals(a.Ckey));

                            if (null == old)
                            {
                                addupdobj.Id = GetSeq("SEQ_Sys_Config");

                                db.SysConfig.Add(addupdobj);
                            }
                            else
                            {
                                $"SysConfig Ekey:{addupdobj.Ckey} 已存在".Warn();
                                return AddRecord;
                            }
                        }

                        break;
                    case UPD:
                        var tmp = db.SysConfig.FirstOrDefault(a => a.Ckey == addupdobj.Ckey);

                        if (null == tmp)
                        {
                            $"SysConfig无法找到{addupdobj.Ckey}".Warn();
                            return UpdNoRecord;
                        }

                        addupdobj.Upd(tmp);

                        db.SysConfig.Update(tmp);
                        break;
                    case DEL:
                        var tmp1 = db.SysConfig.FirstOrDefault(a => a.Id == addupdobj.Id);

                        if (null == tmp1)
                        {
                            $"SysConfig无法找到{addupdobj.Id}".Warn();
                            return DelNoRecord;
                        }

                        db.SysConfig.Remove(tmp1);
                        break;
                    default:
                        OpEmpty.Info();
                        return OpEmpty;
                }

               SaveChanges(db, "SysConfig"+op);
            }

            return Success;
        }
    }
}
